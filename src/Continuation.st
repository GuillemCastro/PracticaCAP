'From Pharo3.0 of 18 March 2013 [Latest update: #30864] on 27 January 2018 at 4:51:09.858417 pm'!Object subclass: #Continuation	instanceVariableNames: 'values'	classVariableNames: ''	poolDictionaries: ''	category: 'Kernel-Methods'!!Continuation commentStamp: '<historical>' prior: 0!I permit to save the execution flow and to restart it later. I was originally used in seaside.Example :You have an object with the instance variable executionFlow.You save the current execution flow with :Continuation currentDo: [ :cc | executionFlow := cc]You restart the execution flow with :executionFlow value: true!!Continuation methodsFor: 'private' stamp: 'CamilleTeruel 4/4/2013 11:59'!restoreValues	| valueStream context |	valueStream := values readStream.	[valueStream atEnd] whileFalse:		[context := valueStream next.		1 to: context class instSize do: [:i | context instVarAt: i put: valueStream next].		1 to: context size do: [:i | context at: i put: valueStream next]]! !!Continuation methodsFor: 'private' stamp: 'ClementBera 4/3/2013 10:16'!terminate: aContext	| context |	context := aContext.	[context notNil] whileTrue: [context := context swapSender: nil]! !!Continuation methodsFor: 'private' stamp: 'CamilleTeruel 4/4/2013 11:58'!initializeFromContext: aContext	| valueStream context |	valueStream := WriteStream on: (Array new: 20).	context := aContext.	[context notNil] whileTrue:		[valueStream nextPut: context.		1 to: context class instSize do: [:i | valueStream nextPut: (context instVarAt: i)].		1 to: context size do: [:i | valueStream nextPut: (context at: i)].		context := context sender].	values := valueStream contents! !!Continuation methodsFor: 'accessing' stamp: 'ab 6/15/2003 19:18'!numArgs	^ 1! !!Continuation methodsFor: 'evaluating' stamp: 'lr 10/28/2007 14:42'!valueWithArguments: anArray	anArray size = 1		ifFalse: [ ^ self error: 'continuations can only be resumed with one argument' ].	self value: anArray first! !!Continuation methodsFor: 'evaluating' stamp: 'ab 6/15/2003 19:13'!value	self value: nil! !!Continuation methodsFor: 'evaluating' stamp: 'lr 10/28/2007 14:42'!value: anObject	"Invoke the continuation and answer anObject as return value."	self terminate: thisContext.	self restoreValues.	thisContext swapSender: values first.	^ anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Continuation class	instanceVariableNames: ''!!Continuation class methodsFor: '*Reflection-Complete' stamp: 'jjddpp 10/23/2014 17:11'!callcc: aBlock	^ self currentDo: aBlock! !!Continuation class methodsFor: '*Reflection-Complete' stamp: 'GuillemCasto 1/27/2018 16:43'!continuation	^Continuation fromContext: thisContext sender sender.! !!Continuation class methodsFor: 'instance creation' stamp: 'ab 6/15/2003 19:13'!currentDo: aBlock	^ aBlock value: (self fromContext: thisContext sender)! !!Continuation class methodsFor: 'instance creation' stamp: 'ab 6/15/2003 19:13'!fromContext: aStack	^self new initializeFromContext: aStack! !!Continuation class methodsFor: 'instance creation' stamp: 'ab 6/15/2003 19:13'!current	^ self fromContext: thisContext sender! !